<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.3.xsd">
    <changeSet id="addBlogCategory" author="chuson">
        <sql>
            CREATE TABLE if not exists public.blog_category (
            id serial NOT NULL,
            "name" varchar NULL,
            CONSTRAINT blog_category_pk PRIMARY KEY (id)
            );
        </sql>
    </changeSet>
    <changeSet id="deleteColumnsAndAddReferences" author="chuson">
        <sql>
            ALTER TABLE public.blog DROP COLUMN is_blog;
            ALTER TABLE public.blog DROP COLUMN is_book;
            ALTER TABLE public.blog DROP COLUMN is_movie;
            ALTER TABLE public.blog ADD category_id int NOT NULL;
        </sql>
    </changeSet>
    <changeSet id="addForeignkeyToCategory" author="chuson">
        <sql>
            alter table blog add constraint "fk_blog_category" foreign key (category_id) references blog_category(id)
        </sql>
    </changeSet>
    <changeSet id="addTableBlogTag" author="chuson">
        <sql>
            Create table if not exists BlogTag(
            id serial NOT NULL,
            "name" varchar NULL,
            CONSTRAINT blog_tag_pk PRIMARY KEY (id)
            );

        </sql>
    </changeSet>
    <changeSet id="addBlogTagFk" author="chuson">
        <sql>
            ALTER TABLE blog ADD COLUMN tag_id INT REFERENCES BlogTag(id);
        </sql>
    </changeSet>
    <changeSet id="addBlogColumns" author="chuson">
        <sql>
            ALTER TABLE public.blogtag ADD create_date timestamptz NULL DEFAULT current_timestamp;
            ALTER TABLE public.blogtag ADD is_delete boolean NULL DEFAULT false;
            ALTER TABLE public.blogtag ADD delete_date timestamptz NULL;
            ALTER TABLE public.blogtag ADD updated_date timestamptz NULL;
        </sql>
    </changeSet>
    <changeSet id="addCommentUpvoteMissingConstraint" author="chuson">
        <sql>
            ALTER TABLE public.comment_upvote ADD CONSTRAINT comment_upvote_pk PRIMARY KEY (user_id,comment_id);
        </sql>
    </changeSet>
    <changeSet id="addCaptionToBlog" author="chuson">
        <sql>
            ALTER TABLE public.blog ADD caption varchar NULL;
        </sql>
    </changeSet>
    <changeSet id="addYoutubeLinkToBlog" author="chuson">
        <sql>
            ALTER TABLE public.blog ADD youtube_link varchar NULL;
            COMMENT ON COLUMN public.blog.youtube_link IS 'if the blog talks about films, it has a link that leads to
            its trailer';
        </sql>
    </changeSet>
    <changeSet id="addMovieCategory" author="chuson">
        <sql>
            CREATE TABLE if not exists public.movie_category (
            movie_category_id serial NOT NULL,
            catogory_name varchar NULL,
            create_date timestamp with time zone NULL,
            updated_date timestamp with time zone NULL,
            delete_date timestamp with time zone NULL,
            CONSTRAINT movie_category_pk PRIMARY KEY (id)
            );
        </sql>
    </changeSet>

    <changeSet id="addManyToManyRelationshipBetweenBlogAndMovieCategory" author="chuson">
        <sql>
            CREATE TABLE if not exists public.blog_movie_catgory (
            blog_id int4 NOT NULL,
            movie_category_id int4 NOT NULL,
            create_date timestamptz NULL DEFAULT CURRENT_TIMESTAMP,
            CONSTRAINT blog_movie_catgory_pk PRIMARY KEY (blog_id, movie_category_id)
            );
            ALTER TABLE public.blog_movie_catgory ADD CONSTRAINT blog_movie_catgory_fk FOREIGN KEY (movie_category_id)
            REFERENCES public.movie_category(movie_category_id);
            ALTER TABLE public.blog_movie_catgory ADD CONSTRAINT blog_movie_catgory_fk_1 FOREIGN KEY (blog_id)
            REFERENCES public.blog(blog_id);
        </sql>
    </changeSet>
    <changeSet id="DUMB1" author="chuson">
        <sql>
            ALTER TABLE public.movie_category ALTER COLUMN create_date SET DEFAULT CURRENT_TIMESTAMP;
        </sql>
    </changeSet>
    <changeSet id="DUMB2" author="chuson">
        <sql>
            ALTER TABLE public.movie_category ADD is_deleted boolean NULL;
        </sql>
    </changeSet>
    <changeSet id="DUMB3" author="chuson">
        <sql>
            ALTER TABLE public.movie_category ALTER COLUMN is_deleted SET DEFAULT false;
        </sql>
    </changeSet>
    <changeSet id="childImages" author="chuson">
        <sql>
            CREATE TABLE IF NOT EXISTS public.child_images (
            child_images_id serial not NULL,
            image_id int NULL,
            image_link varchar NOT NULL,
            top_index int NULL,
            left_index int NULL,
            width int NULL,
            CONSTRAINT child_images_pk PRIMARY KEY (child_images_id),
            CONSTRAINT child_images_fk FOREIGN KEY (image_id) REFERENCES public.paragraph_image(image_id)
            );
        </sql>
    </changeSet>
    <changeSet id="childImagesClass" author="chuson">
        <sql>
            ALTER TABLE public.child_images ADD image_class varchar NULL DEFAULT 'character';
        </sql>
    </changeSet>
    <changeSet id="blogHashTags" author="chuson">
        <sql>
            ALTER TABLE public.blog ADD blog_hash_tags varchar NULL;
        </sql>
    </changeSet>
</databaseChangeLog>
