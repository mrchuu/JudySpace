-- public.databasechangelog definition

-- Drop table

-- DROP TABLE public.databasechangelog;

CREATE TABLE public.databasechangelog (
	id varchar(255) NOT NULL,
	author varchar(255) NOT NULL,
	filename varchar(255) NOT NULL,
	dateexecuted timestamp NOT NULL,
	orderexecuted int4 NOT NULL,
	exectype varchar(10) NOT NULL,
	md5sum varchar(35) NULL,
	description varchar(255) NULL,
	"comments" varchar(255) NULL,
	tag varchar(255) NULL,
	liquibase varchar(20) NULL,
	contexts varchar(255) NULL,
	labels varchar(255) NULL,
	deployment_id varchar(10) NULL
);


-- public.databasechangeloglock definition

-- Drop table

-- DROP TABLE public.databasechangeloglock;

CREATE TABLE public.databasechangeloglock (
	id int4 NOT NULL,
	"locked" bool NOT NULL,
	lockgranted timestamp NULL,
	lockedby varchar(255) NULL,
	CONSTRAINT databasechangeloglock_pkey PRIMARY KEY (id)
);


-- public."role" definition

-- Drop table

-- DROP TABLE public."role";

CREATE TABLE public."role" (
	role_id serial4 NOT NULL,
	role_name varchar(255) NULL,
	CONSTRAINT role_pkey PRIMARY KEY (role_id)
);


-- public.users definition

-- Drop table

-- DROP TABLE public.users;

CREATE TABLE public.users (
	user_id serial4 NOT NULL,
	username varchar(255) NULL DEFAULT (('user'::text || to_char(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS'::text))),
	"password" varchar(255) NULL,
	email varchar(255) NULL,
	role_id int4 NOT NULL,
	last_visit timestamp NULL DEFAULT CURRENT_TIMESTAMP,
	avatar_link text NULL,
	is_banned bool NULL,
	provider_id varchar NULL,
	is_enabled bool NULL,
	CONSTRAINT users_pkey PRIMARY KEY (user_id),
	CONSTRAINT users_username_key UNIQUE (username),
	CONSTRAINT fk_user_role FOREIGN KEY (role_id) REFERENCES public."role"(role_id)
);


-- public.verification_token definition

-- Drop table

-- DROP TABLE public.verification_token;

CREATE TABLE public.verification_token (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	"token" varchar NULL,
	user_id int4 NOT NULL,
	expiry_date timestamp NULL,
	CONSTRAINT verification_token_pk PRIMARY KEY (id),
	CONSTRAINT verification_token_fk FOREIGN KEY (user_id) REFERENCES public.users(user_id)
);
INSERT INTO public.databasechangelog
(id, author, filename, dateexecuted, orderexecuted, exectype, md5sum, description, "comments", tag, liquibase, contexts, labels, deployment_id)
VALUES('', '', '', '', 0, '', '', '', '', '', '', '', '', '');
INSERT INTO public.databasechangeloglock
(id, "locked", lockgranted, lockedby)
VALUES(0, false, '', '');
INSERT INTO public."role"
(role_id, role_name)
VALUES(nextval('role_role_id_seq'::regclass), '');
INSERT INTO public.users
(user_id, username, "password", email, role_id, last_visit, avatar_link, is_banned, provider_id, is_enabled)
VALUES(nextval('users_user_id_seq'::regclass), (('user'::text || to_char(CURRENT_TIMESTAMP, 'YYYYMMDDHH24MISS'::text))), '', '', 0, CURRENT_TIMESTAMP, '', false, '', false);
INSERT INTO public.verification_token
(id, "token", user_id, expiry_date)
VALUES(0, '', 0, '');